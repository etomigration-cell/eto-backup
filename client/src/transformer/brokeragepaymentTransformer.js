import moment from "moment";

/**
 * Map all aihwform record fields for full detail view.
 */
export function transformBrokeragePayments(record) {
  return {
    // Identifiers
FormResponseID:record.FormResponseID,
FormIdentifier:record.FormIdentifier,
SubjectID:record.SubjectID,
GroupID:record.GroupID,
FamilyID:record.FamilyID,
ResponseSetID:record.ResponseSetID,
FormID:record.FormID,
CollectionTypeID:record.CollectionTypeID,
SubjectTypeID:record.SubjectTypeID,
CollectionID:record.CollectionID,
ResponseCreatedDate:record.ResponseCreatedDate,
ProgramID:record.ProgramID,
AuditStaffID:record.AuditStaffID,
AuditDate:record.AuditDate,
DataEnteredByID:record.DataEnteredByID,
DraftSavedOn:record.DraftSavedOn,
RemovedDate:record.RemovedDate,
Purpose_6508:record.Purpose_6508,
Purpose_6508_ResponseChoiceID:record.Purpose_6508_ResponseChoiceID,
Context_6510:record.Context_6510,
Context_6510_ResponseChoiceID:record.Context_6510_ResponseChoiceID,
PaymentMethod_6511:record.PaymentMethod_6511,
PaymentMethod_6511_ResponseChoiceID:record.PaymentMethod_6511_ResponseChoiceID,
NumberOfAdults_6514:record.NumberOfAdults_6514,
NumberOfChildren_6515:record.NumberOfChildren_6515,
NumberOfNightsOfaccommodation_6516:record.NumberOfNightsOfaccommodation_6516,
AmountRecovered_6518:record.AmountRecovered_6518,
TransactionDate_6525:record.TransactionDate_6525,
Shouldthepaperformbeanonymous_6527:record.Shouldthepaperformbeanonymous_6527,
Shouldthepaperformbeanonymous_6527_ResponseChoiceID:record.Shouldthepaperformbeanonymous_6527_ResponseChoiceID,
JobCode_6528:record.JobCode_6528,
JobCode_6528_ResponseChoiceID:record.JobCode_6528_ResponseChoiceID,
TransactionAmount_6530:record.TransactionAmount_6530,
IsGSTincluded_6531:record.IsGSTincluded_6531,
IsGSTincluded_6531_ResponseChoiceID:record.IsGSTincluded_6531_ResponseChoiceID,
NonGSTAmount_6532:record.NonGSTAmount_6532,
DetailsofTransaction_6533:record.DetailsofTransaction_6533,
PaymentforAIHW_6535:record.PaymentforAIHW_6535,
PaymentforAIHW_6535_ResponseChoiceID:record.PaymentforAIHW_6535_ResponseChoiceID,
PurposeOther_6537:record.PurposeOther_6537,
HUBReason_6541:record.HUBReason_6541,
HUBReason_6541_ResponseChoiceID:record.HUBReason_6541_ResponseChoiceID,
Haspaymentalreadybeenmadeordoesfinancestillneedtopay_6548:record.Haspaymentalreadybeenmadeordoesfinancestillneedtopay_6548,
Haspaymentalreadybeenmadeordoesfinancestillneedtopay_6548_ResponseChoiceID:record.Haspaymentalreadybeenmadeordoesfinancestillneedtopay_6548_ResponseChoiceID,
PaymentMethod_6550:record.PaymentMethod_6550,
PaymentMethod_6550_ResponseChoiceID:record.PaymentMethod_6550_ResponseChoiceID,
WhoseBusinessCreditCard_6551:record.WhoseBusinessCreditCard_6551,
Vouchertype_6553:record.Vouchertype_6553,
Vouchertype_6553_ResponseChoiceID:record.Vouchertype_6553_ResponseChoiceID,
ChequePayableTo_6554:record.ChequePayableTo_6554,
ChequeDeliveryPostInstructions_6555:record.ChequeDeliveryPostInstructions_6555,
ChequeDeliveryPickupInstructions_6556:record.ChequeDeliveryPickupInstructions_6556,
EFTAccountName_6558:record.EFTAccountName_6558,
EFTBSB_6559:record.EFTBSB_6559,
EFTAccountNumber_6560:record.EFTAccountNumber_6560,
BPayBillerCode_6561:record.BPayBillerCode_6561,
BPayBillerReference_6562:record.BPayBillerReference_6562,
Isanyportionofthistransactionrecoverable_6563:record.Isanyportionofthistransactionrecoverable_6563,
Isanyportionofthistransactionrecoverable_6563_ResponseChoiceID:record.Isanyportionofthistransactionrecoverable_6563_ResponseChoiceID,
AmountRecovered2_6570:record.AmountRecovered2_6570,
AuthorisingContact1_6571:record.AuthorisingContact1_6571,
AuthorisingContact2_6572:record.AuthorisingContact2_6572,
AuthorisingContactEmail1_6573:record.AuthorisingContactEmail1_6573,
AuthorisingContactEmail2_6574:record.AuthorisingContactEmail2_6574,
RecoveryInvoiceAddress1_6577:record.RecoveryInvoiceAddress1_6577,
RecoveryInvoiceAddress2_6578:record.RecoveryInvoiceAddress2_6578,
Worker1_7379:record.Worker1_7379,
Worker2_7380:record.Worker2_7380,
Ifpaidbystaffpersonallywhichstaff_7384:record.Ifpaidbystaffpersonallywhichstaff_7384,
RecoveryInvoiceFax1_7389:record.RecoveryInvoiceFax1_7389,
AuthorisingContactPhone1_7390:record.AuthorisingContactPhone1_7390,
RecoveryInvoiceFax2_7394:record.RecoveryInvoiceFax2_7394,
AuthorisingContactPhone2_7395:record.AuthorisingContactPhone2_7395,
TeamLeaderSignOff_8255:record.TeamLeaderSignOff_8255,
TeamLeaderSignOff_8255_Signee:record.TeamLeaderSignOff_8255_Signee,
TeamLeaderSignOff_8255_Image:record.TeamLeaderSignOff_8255_Image,
MicahTeam_8276:record.MicahTeam_8276,
MicahTeam_8276_ResponseChoiceID:record.MicahTeam_8276_ResponseChoiceID,
SupplierProvider_8871:record.SupplierProvider_8871,
RecoveryInvoiceName1_8872:record.RecoveryInvoiceName1_8872,
RecoveryInvoiceName2_8873:record.RecoveryInvoiceName2_8873,
HUBPurpose_9316:record.HUBPurpose_9316,
HUBPurpose_9316_ResponseChoiceID:record.HUBPurpose_9316_ResponseChoiceID,
HUBExpenseType_9317:record.HUBExpenseType_9317,
HUBExpenseType_9317_ResponseChoiceID:record.HUBExpenseType_9317_ResponseChoiceID,
MicahTeam_11295:record.MicahTeam_11295,
TenancyAccessorSustainment_13318:record.TenancyAccessorSustainment_13318,
TenancyAccessorSustainment_13318_ResponseChoiceID:record.TenancyAccessorSustainment_13318_ResponseChoiceID,
AuthorizedBy_16942:record.AuthorizedBy_16942,
AuthorizedBy_16942_Signee:record.AuthorizedBy_16942_Signee,
AuthorizedBy_16942_Image:record.AuthorizedBy_16942_Image,
AuthorizedBy_16943:record.AuthorizedBy_16943,
FinanceJobCode_16945:record.FinanceJobCode_16945,
FinanceShortJobCode_16946:record.FinanceShortJobCode_16946,
SignatureofCreditCardHolder_16947:record.SignatureofCreditCardHolder_16947,
SignatureofCreditCardHolder_16947_Signee:record.SignatureofCreditCardHolder_16947_Signee,
SignatureofCreditCardHolder_16947_Image:record.SignatureofCreditCardHolder_16947_Image,
SelectBusinessCreditCardHolder_16948:record.SelectBusinessCreditCardHolder_16948,
WhichPettyCashTin_16959:record.WhichPettyCashTin_16959,
Willthistransactionbenefitonlythisindividualorisitforanentirefamily_21917:record.Willthistransactionbenefitonlythisindividualorisitforanentirefamily_21917,
Willthistransactionbenefitonlythisindividualorisitforanentirefamily_21917_ResponseChoiceID:record.Willthistransactionbenefitonlythisindividualorisitforanentirefamily_21917_ResponseChoiceID,
ServiceUserDFVOonlyOusterCondition_22992:record.ServiceUserDFVOonlyOusterCondition_22992,
ServiceUserDFVOonlyOusterCondition_22992_ResponseChoiceID:record.ServiceUserDFVOonlyOusterCondition_22992_ResponseChoiceID,
IstheServiceUsercurrentlylivinginthehome_22993:record.IstheServiceUsercurrentlylivinginthehome_22993,
IstheServiceUsercurrentlylivinginthehome_22993_ResponseChoiceID:record.IstheServiceUsercurrentlylivinginthehome_22993_ResponseChoiceID,
NumberofChildrenlivingwiththeServiceUserinhome_22995:record.NumberofChildrenlivingwiththeServiceUserinhome_22995,
DateSafetyUpgradeCompleted_22996:record.DateSafetyUpgradeCompleted_22996,
SafetyUpgradeComments_22997:record.SafetyUpgradeComments_22997,
AttachDocumentssuchasInvoicesorreceipts_23268:record.AttachDocumentssuchasInvoicesorreceipts_23268,
IfotherWhatisit_23527:record.IfotherWhatisit_23527,
ABN_23535:record.ABN_23535,
BSBNumber_26963:record.BSBNumber_26963,
BrokerageTypeShouldbeansweredonlybytheLotusDRCteam_27196:record.BrokerageTypeShouldbeansweredonlybytheLotusDRCteam_27196,
BrokerageTypeShouldbeansweredonlybytheLotusDRCteam_27196_ResponseChoiceID:record.BrokerageTypeShouldbeansweredonlybytheLotusDRCteam_27196_ResponseChoiceID,
Category_28340:record.Category_28340,
Category_28340_ResponseChoiceID:record.Category_28340_ResponseChoiceID,
AIHWpurpose_28341:record.AIHWpurpose_28341,
AIHWpurpose_28341_ResponseChoiceID:record.AIHWpurpose_28341_ResponseChoiceID,
Ofchildrenunder5_32024:record.Ofchildrenunder5_32024,
childrenbetween6and12_32025:record.childrenbetween6and12_32025,
childrenbetween13and18_32026:record.childrenbetween13and18_32026

  };
}


export function transformBrokeragePayment(records) {
  const minimalKeys = [
    "SubjectTypeID",
    "Status",
    "dateCompleted",
    "dateLastUpdated",
    "LastUpdatedBy",
    "micahTeam",
    
  ];

  // Map all records to frontend format first
  const mapped = records.map(transformBrokeragePayments);

  // Then extract minimal information from mapped records
  const minimal = mapped.map(rec =>
    ({
      ...Object.fromEntries(
        minimalKeys.map(key => [key, rec[key]])
      ),
      StaffName: `${rec.fName || ''} ${rec.lName || ''}`.trim(),
    })
  );

  return {
    minimal,
    full: mapped
  };
}
